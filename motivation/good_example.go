package main

import (
	"fmt"
	"strings"
)

type Person struct {
	FirstName string
	LastName  string
	HairColor string
}

// BEGIN What we expect to have generated by this tool

// NOTE: Only generate this method if the type isn't already a fmt.Stringer
func (s Person) String() string {
	return fmt.Sprintf("%#v", s)
}

type JoinPerson []Person

func (j JoinPerson) With(sep string) string {
	all := make([]string, 0, len(j))
	for _, s := range j {
		all = append(all, s.String())
	}
	return strings.Join(all, sep)
}

// END

func main() {
	people := []Person{
		Person{"Sideshow", "Bob", "red"},
		Person{"Homer", "Simpson", "n/a"},
		Person{"Lisa", "Simpson", "blonde"},
		Person{"Marge", "Simpson", "blue"},
		Person{"Mr", "Burns", "gray"},
	}
	fmt.Printf("My favorite Simpsons Characters:%s\n", JoinPerson(people).With("\n"))
}
